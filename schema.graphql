type Kaleido @entity {
  #id: Kaleido
  id: ID!
  circulation: BigInt!
}

type Media @entity {
  #id: address
  id: ID!
  #owner: eoa
  owner: Bytes!
  metadata: String!
  #saltNonce: いらないかも
  saltNonce: BigInt!
  spaces: [Space!] @derivedFrom(field: "media")
}

type Space @entity {
  ## id: metadata
  id: ID!
  # mediaId: contract address
  metadata: String!
  media: Media!
  periods: [Period!] @derivedFrom(field: "space")
  offers: [Offer!] @derivedFrom(field: "space")
  deleted: Boolean!
}

#type Participant @entity {
#  ## id: address
#  id: ID!
#  media: [Media!]
#}

type Period @entity {
  ## id: tokenId
  id: ID!
  media: Media!
  space: Space!
  tokenMetadata: String!
  saleStartTimestamp: BigInt!
  saleEndTimestamp: BigInt!
  displayStartTimestamp: BigInt!
  displayEndTimestamp: BigInt!
  pricing: Pricing!
  minPrice: BigInt!
  startPrice: BigInt!
  buy: Buy
  bidding: Bid
  bids: [Bid!] @derivedFrom(field: "period")
  advertiser: Bytes
  proposedMetadata: String
  proposalAccepted: Boolean!
  deniedProposals: [DeniedProposal!]
  deleted: Boolean!
}

type DeniedProposal @entity {
  ## id: proposedMetadata
  id: ID!
  period: Period!
  reason: String!
}

type Buy @entity {
  id: ID!
  period: Period!
  buyer: Bytes!
  timestamp: BigInt!
}

type Bid @entity {
  id: ID!
  period: Period!
  buyer: Bytes!
  timestamp: BigInt!
  price: BigInt!
}

type Offer @entity {
  #id: tokenID
  id: ID!
  metadata: String!
  space: Space!
  displayStartTimestamp: BigInt!
  displayEndTimestamp: BigInt!
  from: Bytes!
  price: BigInt!
  status: OfferStatus!
}

enum OfferStatus {
  DENIED
  ACCEPTED
  OFFERED
}

enum Pricing {
  RRP
  DPBT
  BIDDING
  OFFER
}


